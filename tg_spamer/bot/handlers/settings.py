from aiogram import F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile, Message, BufferedInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from tg_spamer.loader import db
from loader import dp, bot
from tg_spamer.clients import config



class MyCallback(CallbackData, prefix='spam'):
    step: str
    action: str


class MyForm(StatesGroup):
    await_users = State()
    await_delay = State()



@dp.callback_query(F.data == 'spam_settings')
async def spam_settings(query: CallbackQuery, state: FSMContext):
    await state.clear()
    builder = InlineKeyboardBuilder()

    if config.dual_message() == 0: 
        builder.button(text='‚ùå –î–≤–æ–π–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞', callback_data=MyCallback(step='settings_dual_send', action='no'))   
    else:
        builder.button(text='‚úÖ –î–≤–æ–π–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞', callback_data=MyCallback(step='settings_dual_send', action='yes'))

    builder.button(text='‚è∞ –ü–æ–º–µ–Ω—è—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É', callback_data='change_delay')
    builder.button(text='‚úâÔ∏è –ü–æ–º–µ–Ω—è—Ç—å –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π', callback_data='change_count_message')
    builder.button(text='üë• –ê—É–¥–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data='users_send')
    builder.button(text='üîó –ü—Ä–æ—Å–∫–∏', callback_data='info_proxy')
    builder.button(text='üëà –ù–∞–∑–∞–¥', callback_data='back')

    builder.adjust(1) # –ö–Ω–æ–ø–∫–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
    delay = config.raw_delay().split(' ')
    text = f'<b>–ù–ê–°–¢–†–û–ô–ö–ò –†–ê–°–°–´–õ–ö–ò</b>\n\n–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω—è–º–∏ –æ—Ç <b>{delay[0]}</b> –¥–æ <b>{delay[1]}</b> —Å–µ–∫—É–Ω–¥'
    
    await query.message.delete()
    await query.message.answer(
            text=text,
            reply_markup=builder.as_markup()
            )

    
            

# –ó–∞–º–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
@dp.callback_query(F.data == 'change_delay')
async def change_delay(query: CallbackQuery, state: FSMContext):
    await query.message.answer(text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ –ø—Ä–æ–±–µ–ª 10 30')
    await state.set_state(MyForm.await_delay)


# –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∏
@dp.message(MyForm.await_delay)
async def save_change_delay(message: Message, state: FSMContext):
    if config.change_delay(message.text):
        await message.answer(
            text='–ó–∞–¥–µ—Ä–∂–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞',
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='spam_settings')]
            ])
            )
    else:
        await message.answer(text='–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–µ—Ä–∂–∫–∏, –ø–æ—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')


# –î–≤–æ–π–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
@dp.callback_query(MyCallback.filter(F.step == 'settings_dual_send'))
async def settings_dual_send(query: CallbackQuery, callback_data: MyCallback, state: FSMContext):
    action = callback_data.action
    if action == 'yes':
        db.query('UPDATE config SET dual_message = 0')
        await spam_settings(query, state)
    
    if action == 'no':
        db.query('UPDATE config SET dual_message = 1')
        await spam_settings(query, state)


# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Å–ø–∞–º–∞
@dp.callback_query(F.data == 'users_send')
async def users_send(query: CallbackQuery):
    await query.message.edit_text(text='–ê—É–¥–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ üëá')
    await query.message.edit_reply_markup(
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–ó–∞–º–µ–Ω–∏—Ç—å', callback_data='change_users_send')],
            [InlineKeyboardButton(text='üëà –ù–∞–∑–∞–¥', callback_data='spam_settings')]
        ])
        )

    # –î–æ—Å—Ç–∞–µ–º —Å–ø–∞–º-—é–∑–µ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –±–∞–π—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ txt
    row_users = config.get_spam_users()
    if row_users:
        users_str = ''
        for user in row_users:
            users_str += f'{user}\n'

        users_bytes = users_str.encode()
        await query.message.answer_document(document=BufferedInputFile(file=users_bytes, filename='users.txt'))
    else:
        await query.answer(text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ—Ç', show_alert=True)


# –ó–∞–º–µ–Ω–∏—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
@dp.callback_query(F.data == 'change_users_send')
async def users_send(query: CallbackQuery, state: FSMContext):
    await state.set_state(MyForm.await_users)
    await query.message.answer(
        text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text='üëà –ù–∞–∑–∞–¥', callback_data='back_users_send')]
            ])
        )


# –û—Ç–º–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@dp.callback_query(F.data == 'back_users_send')
async def back_users_send(query: CallbackQuery, state: FSMContext):
    await spam_settings(query, state)
    

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∞–º-—é–∑–µ—Ä–æ–≤ –≤ –±–∞–∑–µ 
@dp.message(MyForm.await_users, F.document)
async def await_users_send(message: Message, state: FSMContext):
    # –î–æ—Å—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
    row_users = (await bot.download(file=message.document)).read().decode()
    users = row_users.strip().split('\n')

    # –û—á–∏—â–∞–µ–º –±–∞–∑—É –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    config.delete_all_spam_users()
    for user in users:
        user = user.strip()
        config.insert_spam_user(user)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
    await state.clear()
    await message.answer(
        text='–°–æ—Ö—Ä–∞–Ω–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='spam_settings')]
        ])
        )