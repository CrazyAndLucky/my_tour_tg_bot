from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, BufferedInputFile, CallbackQuery, ReplyKeyboardRemove
from aiogram import F
from aiogram.filters.callback_data import CallbackData
from aiogram.fsm.context import FSMContext
from hashlib import md5

from loader import dp, db, bot
from shop_bot.filters import IsAdmin
from shop_bot.keyboards.default.markups import accounts, orders, add_account, admins, mailling
from shop_bot.states import ProductState, Add_admin_state


delete_product = '–£–¥–∞–ª–∏—Ç—å'

class Product_cb(CallbackData, prefix='product'):
    idx: str
    action: str


# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–ª—è –∞–¥–º–∏–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ
@dp.message(IsAdmin(), F.text == accounts)
async def process_admin_account_show(message: Message, state: FSMContext):
    # –û—á–∏—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –≤ –Ω–µ–º –±—ã–ª–∏
    await state.clear()

    await message.answer(text='<b>üîΩ –¢–û–í–ê–†–´ –í –ü–†–û–î–ê–ñ–ï üîΩ</b>')

    for idx, title, body, photo, price, _ in await db.fetchall('SELECT * FROM products'):
        text = f'{title}\n\n{price} —Ä—É–±.\n\n{body}'

        await message.answer_photo(
            photo=BufferedInputFile(file=photo, filename='image'),
            caption=text, 
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=delete_product, callback_data=Product_cb(idx=idx, action='delete_product').pack())]]),
            )

    # –°–æ–æ–±—â–µ–∏–Ω–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂—É
    await message.answer(
        text='üîº <b>–¢–û–í–ê–†–´ –í –ü–†–û–î–ê–ñ–ï</b> üîº',
        reply_markup=(InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=add_account, callback_data='add_product')]]))
        )

# –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'delete_product'))
async def process_delete_product(query: CallbackQuery, callback_data: Product_cb):
    await db.query('DELETE FROM products WHERE idx = ?', (callback_data.idx,))

    await query.message.delete()


# –ó–∞–º–µ—Ç–∫–∞ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞
@dp.callback_query(IsAdmin(), F.data == 'add_product')
async def process_add_product(query: CallbackQuery, state: FSMContext):
    await query.message.answer('–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–µ—Ç—å —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö, —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞)')
    await state.set_state(ProductState.title)


# –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ —Ü–µ–Ω—É
@dp.message(IsAdmin(), ProductState.title)
async def product_title(message: Message, state: FSMContext):
    await state.update_data(title=message.text)
    await state.set_state(ProductState.price)
    await message.answer(text='–¶–µ–Ω–∞?')


# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ
@dp.message(IsAdmin(), ProductState.price, F.text.isdigit())
async def product_price(message: Message, state: FSMContext):
    await state.update_data(price=message.text)
    await state.set_state(ProductState.body)
    await message.answer(text='–û–ø–∏—Å–∞–Ω–∏–µ?')


# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
@dp.message(IsAdmin(), ProductState.body)
async def product_price(message: Message, state: FSMContext):
    await state.update_data(body=message.text)
    await state.set_state(ProductState.image)
    await message.answer(text='–§–æ—Ç–æ?')


# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
@dp.message(IsAdmin(), ProductState.image, F.photo)
async def product_price(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id # [-1] –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ª—É—á—à–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–π—Ç–∞—Ö
    image = (await bot.download(file=file_id)).read() 
    
    data = await state.get_data() # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear() # –û–±–Ω—É–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    title = data['title']
    price = data['price']
    body = data['body']

    idx = md5(''.join([title, price, body]).encode()).hexdigest()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä –≤ –±–∞–∑—É
    await db.query('INSERT INTO products VALUES (?, ?, ?, ?, ?, ?)', (idx, title, body, image, price, 'pay_link'))

    await process_admin_account_show(message, state)



