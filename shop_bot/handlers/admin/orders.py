from aiogram.types import Message, BufferedInputFile, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.filters.callback_data import CallbackData
from aiogram import F

from loader import dp, db
from shop_bot.filters import IsAdmin
from shop_bot.keyboards.default.markups import orders


class Product_cb(CallbackData, prefix='product'):
    idx: str
    action: str


# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
@dp.message(IsAdmin(), F.text == orders)
async def orders_button(message: Message):
    usr_orders = await db.fetchall('SELECT * FROM orders')
    if len(usr_orders) == 0:
        await message.answer('–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤')
    else:

        for usr_order in usr_orders:
            usr_id = usr_order[0]
            idx = usr_order[1]
            title = usr_order[2]
            body = usr_order[3]
            photo = usr_order[4]
            price = usr_order[5]

            
            text = f'–ó–∞–∫–∞–∑ —Å–¥–µ–ª–∞–ª: <a href="tg://user?id={usr_id}"><b>–°–°–´–õ–ö–ê –ù–ê –ü–†–û–§–ò–õ–¨</b></a>\n\n{title}\n\n{price}\n\n{body}'

            await message.answer_photo(
                photo=BufferedInputFile(file=photo, filename='image'),
                caption=text,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text='–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–∏–ª', callback_data=Product_cb(idx=idx, action='order').pack())],
                    [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å –∑–∞–∫–∞–∑ –≤ –ø—Ä–æ–¥–∞–∂—É', callback_data=Product_cb(idx=idx, action='back_order').pack())],
                    ])
                )
            

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'order'))
async def order_confirm(query: CallbackQuery, callback_data: Product_cb):
    idx = callback_data.idx
    await query.message.edit_reply_markup(reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞', callback_data=Product_cb(idx=idx, action='confirm_order').pack())], [InlineKeyboardButton(text='üëà –ù–∞–∑–∞–¥', callback_data=Product_cb(idx=idx, action='back').pack())]]))


# –û—Ç–º–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'back'))
async def back_order_confirm(query: CallbackQuery, callback_data: Product_cb):
    idx = callback_data.idx
    await query.message.edit_reply_markup(reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–∏–ª', callback_data=Product_cb(idx=idx, action='order').pack())],
        [InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å –∑–∞–∫–∞–∑ –≤ –ø—Ä–æ–¥–∞–∂—É', callback_data=Product_cb(idx=idx, action='back_order').pack())]
        ]))


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'confirm_order'))
async def order_confirm(query: CallbackQuery, callback_data: Product_cb):
    idx = callback_data.idx
    await query.message.delete()

    await db.query('DELETE FROM orders WHERE idx = ?', (idx,))

    await query.message.answer(text='‚úÖ –ó–ê–ö–ê–ó –í–´–ü–û–õ–ù–ï–ù ‚úÖ')


# –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ –ø—Ä–æ–¥–∞–∂—É
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'back_order'))
async def order_confirm(query: CallbackQuery, callback_data: Product_cb):
    idx = callback_data.idx
    await query.message.edit_reply_markup(reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üõí –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –∑–∞–∫–∞–∑–∞ –≤ –ø—Ä–æ–¥–∞–∂—É', callback_data=Product_cb(idx=idx, action='confirm_back_order').pack())], 
        [InlineKeyboardButton(text='üëà –ù–∞–∑–∞–¥', callback_data=Product_cb(idx=idx, action='back').pack())]
        ]))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –ø—Ä–æ–¥–∞–∂—É
@dp.callback_query(IsAdmin(), Product_cb.filter(F.action == 'confirm_back_order'))
async def order_confirm(query: CallbackQuery, callback_data: Product_cb):
    idx = callback_data.idx
    await query.message.delete()

    data_order = await db.fetchone('SELECT * FROM orders WHERE idx = ?', (idx,))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–æ–¥–∞–∂—É
    print(data_order)
    title = data_order[2]
    body = data_order[3]
    photo = data_order[4]
    price = data_order[5]
    pay_link = data_order[6]

    await db.query('INSERT INTO products VALUES (?, ?, ?, ?, ?, ?)', (idx, title, body, photo, price, pay_link))

    await db.query('DELETE FROM orders WHERE idx = ?', (idx,))



    await query.message.answer(text='‚úÖ –ó–ê–ö–ê–ó –í–´–ü–û–õ–ù–ï–ù ‚úÖ')