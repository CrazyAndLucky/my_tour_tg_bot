import asyncio
import logging
from multiprocessing import Process

from aiogram import filters, F
from aiogram.types import Message, CallbackQuery, BufferedInputFile, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from loader import dp, bot, db, um, users, admins
from shop_bot.app import dp, cmd_start
from tg_spamer.main import tg_spamer_start
from tg_spamer.bot.bot import dp, bot
from msg_text import tg_spamer_info


# –°—Ç–∞—Ä—Ç
@dp.message(filters.CommandStart())
async def process_start_bot(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    await um.add_new_user(message.from_user.id, message.from_user.username, message.from_user.first_name, message.from_user.last_name)
    
    await bot.set_my_commands(
        commands=[
            BotCommand(command='start', description='–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
            BotCommand(command='tg_spamer', description='–ë–æ—Ç-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–≥ —Å–ø–∞–º–µ—Ä–∞'),
            BotCommand(command='shop', description='–ë–æ—Ç-–º–∞–≥–∞–∑–∏–Ω'),
            ]
    )

    await state.clear()
    
    await message.answer(
        text=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!',
        reply_markup=ReplyKeyboardRemove()
    )

    await message.answer(
        text='–≠—Ç–æ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ –±–æ—Ç-–≤–∏–∑–∏—Ç–∫–∞, –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç–µ—Ä—Ç—å –ø—Ä–∏–º–µ—Ä—ã –º–æ–∏—Ö —Ä–∞–±–æ—Ç!\n\n–í—ã–±–∏—Ä–∞–π, —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, –ø—Ä–∏–º–µ—Ä –∫–∞–∫–æ–≥–æ –±–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å',
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üõç –ë–û–¢-–ú–ê–ì–ê–ó–ò–ù', callback_data='shop_bot')],
            [InlineKeyboardButton(text='üíª –ë–û–¢-–ò–ù–¢–ï–†–§–ï–ô–° –î–õ–Ø –¢–ì –°–ü–ê–ú–ï–†–ê', callback_data='tg_spamer_info')],
            ]),
        )


@dp.callback_query(F.data == 'tg_spamer_info')
async def tg_spamer(query: CallbackQuery, state: FSMContext):
    await query.message.answer(
        text=tg_spamer_info,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='‚û°Ô∏è –ü–†–û–î–û–õ–ñ–ò–¢–¨', callback_data='tg_spamer')],
            ]
        ),
    )


@dp.message(filters.Command('tg_spamer'))
async def tg_spamer(message: Message, state: FSMContext):
    await message.answer(
        text=tg_spamer_info,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='‚û°Ô∏è –ü–†–û–î–û–õ–ñ–ò–¢–¨', callback_data='tg_spamer')],
            ]
        ),
    )


@dp.callback_query(F.data == 'shop_bot')
async def shop_bot(query: CallbackQuery, state: FSMContext):
    await cmd_start(query, state)


async def main():
    await db.connect()
    await db.create_tables()
    logging.basicConfig(level='INFO')
    await dp.start_polling(bot)
    

if __name__ == '__main__':
    # prc = Process(target=tg_spamer_start, daemon=True, name='tg_spammer')
    # prc.start()

    asyncio.run(main())